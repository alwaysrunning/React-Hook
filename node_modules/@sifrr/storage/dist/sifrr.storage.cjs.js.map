{"version":3,"file":"sifrr.storage.cjs.js","sources":["../src/utils/json.ts","../src/utils/dataparser.ts","../src/storages/storage.ts","../src/storages/indexeddb.ts","../src/storages/websql.ts","../src/storages/localstorage.ts","../src/storages/cookies.ts","../src/storages/jsonstorage.ts","../src/sifrr.storage.ts"],"sourcesContent":["const toS = Object.prototype.toString;\nconst uId = '~SS%l3g5k3~';\n\nfunction decodeBlob(str, type) {\n  return new Blob([new Uint8Array(str.split(',')).buffer], { type });\n}\n\nfunction encodeBlob(blob) {\n  const uri = URL.createObjectURL(blob),\n    xhr = new XMLHttpRequest();\n\n  xhr.open('GET', uri, false);\n  xhr.send();\n\n  URL.revokeObjectURL(uri);\n\n  const ui8 = new Uint8Array(xhr.response.length);\n  for (let i = 0; i < xhr.response.length; ++i) {\n    ui8[i] = xhr.response.charCodeAt(i);\n  }\n  return ui8.toString();\n}\n\nexport function parse(data: any): any {\n  let ans = data;\n  if (typeof data === 'string') {\n    try {\n      ans = data = JSON.parse(data);\n    } catch (e) {\n      // do nothing\n    }\n  }\n\n  if (typeof data === 'string' && data.indexOf(uId) > 0) {\n    const [type, av, av2] = data.split(uId);\n\n    if (type === 'ArrayBuffer') ans = new Uint8Array(av.split(',').map(i => parseInt(i))).buffer;\n    else if (type === 'Blob') ans = decodeBlob(av2, av);\n    else ans = new window[type](av.split(','));\n  } else if (Array.isArray(data)) {\n    ans = [];\n    data.forEach((v, i) => {\n      ans[i] = parse(v);\n    });\n  } else if (typeof data === 'object') {\n    if (data === null) return null;\n    ans = {};\n    for (const k in data) {\n      ans[k] = parse(data[k]);\n    }\n  }\n  return ans;\n}\n\nexport function stringify(data: any): string {\n  if (typeof data !== 'object') return JSON.stringify(data);\n  if (data === null) return 'null';\n  if (Array.isArray(data)) return JSON.stringify(data.map(d => stringify(d)));\n  const type = toS.call(data).slice(8, -1);\n  if (type === 'Object') {\n    let ans = {};\n    for (let k in data) {\n      ans[k] = stringify(data[k]);\n    }\n    return JSON.stringify(ans);\n  } else if (type === 'ArrayBuffer') {\n    data = new Uint8Array(data);\n  } else if (type === 'Blob') {\n    data = data.type + uId + encodeBlob(data);\n  }\n  return type + uId + data.toString();\n}\n","import { SavedDataObject, SavedData } from '../storages/types';\n\n// always bind to storage\nexport const parseGetData = (\n  original: SavedDataObject,\n  onExpire: (k: string) => Promise<boolean> | undefined\n): object => {\n  const now = Date.now();\n  Object.keys(original).forEach(k => {\n    if (typeof original[k] === 'undefined') return;\n\n    const { createdAt, ttl } = original[k];\n    original[k] = original[k] && original[k].value;\n\n    if (ttl === 0) return;\n\n    if (now - createdAt > ttl) {\n      delete original[k];\n      onExpire && onExpire(k);\n    }\n  });\n  return original;\n};\n\nexport const parseSetValue = (value: any, defaultTtl: number): SavedData => {\n  if (value && value.value) {\n    value.ttl = value.ttl || defaultTtl;\n    value.createdAt = Date.now();\n    return value;\n  } else {\n    return {\n      value,\n      ttl: defaultTtl,\n      createdAt: Date.now()\n    };\n  }\n};\n\nexport const parseSetData = (\n  key: string | object,\n  value: any | undefined,\n  defaultTtl: number | undefined\n): SavedDataObject => {\n  if (typeof key === 'string') {\n    return { [key]: parseSetValue(value, defaultTtl) };\n  } else {\n    const data = {};\n    Object.keys(key).forEach(k => (data[k] = parseSetValue(key[k], defaultTtl)));\n    return data;\n  }\n};\n\nexport const parseKey = (key: string | string[]): string[] => {\n  if (Array.isArray(key)) {\n    return key;\n  } else {\n    return [key];\n  }\n};\n","import { stringify, parse } from '../utils/json';\nimport { parseGetData, parseKey, parseSetData } from '../utils/dataparser';\nimport { StorageOptions, SavedDataObject } from './types';\n\nconst defaultOptions: StorageOptions = {\n  name: 'SifrrStorage',\n  version: 1,\n  description: 'Sifrr Storage',\n  size: 5 * 1024 * 1024,\n  ttl: 0\n};\n\nabstract class Storage {\n  static type: string;\n\n  type: string = (<typeof Storage>this.constructor).type;\n\n  name: string;\n  version: string | number;\n  ttl: number;\n  description: string;\n  size: number;\n\n  tableName: string;\n  private table = {};\n\n  constructor(options: StorageOptions = defaultOptions) {\n    Object.assign(this, defaultOptions, options);\n    this.tableName = this.name + this.version;\n  }\n\n  // overwrited methods\n  protected select(keys: string[]): SavedDataObject | Promise<SavedDataObject> {\n    const table = this.getStore();\n    const ans = {};\n    keys.forEach(key => (ans[key] = table[key]));\n    return ans;\n  }\n\n  protected upsert(data: { [x: string]: any }): boolean | Promise<boolean> {\n    const table = this.getStore();\n    for (let key in data) {\n      table[key] = data[key];\n    }\n    this.setStore(table);\n    return true;\n  }\n\n  protected delete(keys: string[]): boolean | Promise<boolean> {\n    const table = this.getStore();\n    keys.forEach(key => delete table[key]);\n    this.setStore(table);\n    return true;\n  }\n\n  protected deleteAll(): boolean | Promise<boolean> {\n    this.setStore({});\n    return true;\n  }\n\n  protected getStore(): SavedDataObject | Promise<SavedDataObject> {\n    return this.table;\n  }\n\n  protected setStore(v: {}) {\n    this.table = v;\n  }\n\n  keys() {\n    return Promise.resolve(this.getStore()).then(d => Object.keys(d));\n  }\n\n  all() {\n    return Promise.resolve(this.getStore()).then(d => parseGetData(d, this.del.bind(this)));\n  }\n\n  get(key: string) {\n    return Promise.resolve(this.select(parseKey(key))).then(d =>\n      parseGetData(d, this.del.bind(this))\n    );\n  }\n\n  set(key: string | object, value: any) {\n    return Promise.resolve(this.upsert(parseSetData(key, value, this.ttl)));\n  }\n\n  del(key: string | string[]) {\n    return Promise.resolve(this.delete(parseKey(key)));\n  }\n\n  clear() {\n    return Promise.resolve(this.deleteAll());\n  }\n\n  memoize(\n    func: (...arg: any[]) => Promise<any>,\n    keyFunc = (...arg: any[]) => (typeof arg[0] === 'string' ? arg[0] : stringify(arg[0]))\n  ) {\n    return (...args: any) => {\n      const key = keyFunc(...args);\n      return this.get(key).then(data => {\n        if (data[key] === undefined || data[key] === null) {\n          const resultPromise = func(...args);\n          if (!(resultPromise instanceof Promise))\n            throw Error('Only promise returning functions can be memoized');\n          return resultPromise.then(v => {\n            return this.set(key, v).then(() => v);\n          });\n        } else {\n          return data[key];\n        }\n      });\n    };\n  }\n\n  isSupported(force = true) {\n    if (force && (typeof window === 'undefined' || typeof document === 'undefined')) {\n      return true;\n    } else if (window && this.hasStore()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  protected hasStore() {\n    return true;\n  }\n\n  protected isEqual(other: { tableName: string; type: string }) {\n    if (this.tableName == other.tableName && this.type == other.type) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // aliases\n  protected static stringify(data: any) {\n    return stringify(data);\n  }\n\n  protected static parse(data: string) {\n    return parse(data);\n  }\n\n  // one instance per store\n  protected static _all: Array<Storage>;\n  protected static _add(instance: Storage) {\n    this._all = this._all || [];\n    this._all.push(instance);\n  }\n\n  protected static _matchingInstance<T extends Storage>(otherInstance: Storage): T {\n    const all = this._all || [],\n      length = all.length;\n    for (let i = 0; i < length; i++) {\n      if (all[i].isEqual(otherInstance)) return <T>all[i];\n    }\n    this._add(otherInstance);\n    return <T>otherInstance;\n  }\n}\n\nexport default Storage;\n","import Storage from './storage';\nimport { StorageOptions } from './types';\n\nclass IndexedDB extends Storage {\n  private store: any;\n\n  constructor(options: StorageOptions) {\n    super(options);\n    return (<typeof IndexedDB>this.constructor)._matchingInstance<IndexedDB>(this);\n  }\n\n  protected select(keys: string[]) {\n    const ans = {};\n    const promises = [];\n    keys.forEach((key: string | number) =>\n      promises.push(this._tx('readonly', 'get', key, undefined).then((r: any) => (ans[key] = r)))\n    );\n    return Promise.all(promises).then(() => ans);\n  }\n\n  protected upsert(data: object) {\n    const promises = [];\n    for (let key in data) promises.push(this._tx('readwrite', 'put', data[key], key));\n    return Promise.all(promises).then(() => true);\n  }\n\n  protected delete(keys: string[]) {\n    const promises = [];\n    keys.forEach((key: any) => promises.push(this._tx('readwrite', 'delete', key, undefined)));\n    return Promise.all(promises).then(() => true);\n  }\n\n  protected deleteAll() {\n    return this._tx('readwrite', 'clear', undefined, undefined);\n  }\n\n  private _tx(scope: string, fn: string, param1: any, param2: string) {\n    const me = this;\n    this.store = this.store || this.createStore(me.tableName);\n    return this.store.then(\n      (db: {\n        transaction: (arg0: string, arg1: any) => { objectStore: (arg0: string) => void };\n      }) => {\n        return new Promise((resolve, reject) => {\n          const tx = db.transaction(me.tableName, scope).objectStore(me.tableName);\n          const request = tx[fn].call(tx, param1, param2);\n          request.onsuccess = (event: { target: { result: unknown } }) =>\n            resolve(event.target.result);\n          request.onerror = (event: { error: any }) => reject(event.error);\n        });\n      }\n    );\n  }\n\n  protected getStore() {\n    return this._tx('readonly', 'getAllKeys', undefined, undefined).then(this.select.bind(this));\n  }\n\n  private createStore(table: string) {\n    return new Promise((resolve, reject) => {\n      const request = window.indexedDB.open(table, 1);\n      request.onupgradeneeded = () => {\n        request.result.createObjectStore(table);\n      };\n      request.onsuccess = () => resolve(request.result);\n      request.onerror = () => reject(request.error);\n    });\n  }\n\n  protected hasStore() {\n    return !!window.indexedDB;\n  }\n\n  static get type() {\n    return 'indexeddb';\n  }\n}\n\nexport default IndexedDB;\n","import Storage from './storage';\nimport { StorageOptions, SavedDataObject } from './types';\n\ntype websqlResult = {\n  rows: {\n    length: any;\n    item: { (arg0: number): { key: string; value: string } };\n  };\n};\n\ntype websqlStore = {\n  transaction(\n    a: (tx: {\n      executeSql: (arg0: any, arg1: any[], arg2: (tx: any, results: websqlResult) => void) => void;\n    }) => void\n  ): void;\n};\n\ndeclare global {\n  interface Window {\n    openDatabase: (name: string, version: number, z: any, a: any) => websqlStore;\n  }\n}\n\nclass WebSQL extends Storage {\n  private _store: websqlStore;\n\n  constructor(options: StorageOptions) {\n    super(options);\n    return (<typeof WebSQL>this.constructor)._matchingInstance(this);\n  }\n\n  protected parsedData() {}\n\n  protected select(keys: string[]) {\n    const q = keys.map(() => '?').join(', ');\n    // Need to give array for ? values in executeSql's 2nd argument\n    return this.execSql(`SELECT key, value FROM ${this.tableName} WHERE key in (${q})`, keys);\n  }\n\n  protected upsert(data: object) {\n    this.getWebsql().transaction((tx: { executeSql: (arg0: string, arg1: string[]) => void }) => {\n      for (let key in data) {\n        tx.executeSql(`INSERT OR REPLACE INTO ${this.tableName}(key, value) VALUES (?, ?)`, [\n          key,\n          (<typeof WebSQL>this.constructor).stringify(data[key])\n        ]);\n      }\n    });\n    return true;\n  }\n\n  protected delete(keys: string[]) {\n    const q = keys.map(() => '?').join(', ');\n    this.execSql(`DELETE FROM ${this.tableName} WHERE key in (${q})`, keys);\n    return true;\n  }\n\n  protected deleteAll() {\n    this.execSql(`DELETE FROM ${this.tableName}`);\n    return true;\n  }\n\n  protected getStore() {\n    return this.execSql(`SELECT key, value FROM ${this.tableName}`);\n  }\n\n  protected hasStore() {\n    return !!window.openDatabase;\n  }\n\n  private getWebsql() {\n    if (this._store) return this._store;\n    this._store = window.openDatabase('ss', 1, this.description, this.size);\n    this.execSql(`CREATE TABLE IF NOT EXISTS ${this.tableName} (key unique, value)`);\n    return this._store;\n  }\n\n  private execSql(query: string, args = []): Promise<SavedDataObject> {\n    const me = this;\n    return new Promise(resolve => {\n      me.getWebsql().transaction(function(tx) {\n        tx.executeSql(query, args, (tx, results) => {\n          resolve(me.parseResults(results));\n        });\n      });\n    });\n  }\n\n  private parseResults(results: websqlResult): SavedDataObject {\n    const ans = {};\n    const len = results.rows.length;\n    for (let i = 0; i < len; i++) {\n      ans[results.rows.item(i).key] = (<typeof WebSQL>this.constructor).parse(\n        results.rows.item(i).value\n      );\n    }\n    return ans;\n  }\n\n  static get type() {\n    return 'websql';\n  }\n}\n\nexport default WebSQL;\n","import Storage from './storage';\nimport { StorageOptions } from './types';\n\nclass LocalStorage extends Storage {\n  constructor(options: StorageOptions) {\n    super(options);\n    return (<typeof LocalStorage>this.constructor)._matchingInstance(this);\n  }\n\n  protected select(keys: string[]) {\n    const table = {};\n    keys.forEach((k: string) => {\n      const v = (<typeof LocalStorage>this.constructor).parse(\n        this.getLocalStorage().getItem(this.tableName + '/' + k)\n      );\n      if (v !== null) table[k] = v;\n    });\n    return table;\n  }\n\n  protected upsert(data: { [x: string]: any }) {\n    for (const key in data) {\n      this.getLocalStorage().setItem(\n        this.tableName + '/' + key,\n        (<typeof LocalStorage>this.constructor).stringify(data[key])\n      );\n    }\n    return true;\n  }\n\n  protected delete(keys: string[]) {\n    keys.map((k: string) => this.getLocalStorage().removeItem(this.tableName + '/' + k));\n    return true;\n  }\n\n  protected deleteAll() {\n    Object.keys(this.getLocalStorage()).forEach(k => {\n      if (k.indexOf(this.tableName) === 0) this.getLocalStorage().removeItem(k);\n    });\n    return true;\n  }\n\n  protected getStore() {\n    return this.select(\n      Object.keys(this.getLocalStorage())\n        .map(k => {\n          if (k.indexOf(this.tableName) === 0) return k.slice(this.tableName.length + 1);\n        })\n        .filter(k => typeof k !== 'undefined')\n    );\n  }\n\n  private getLocalStorage() {\n    return window.localStorage;\n  }\n\n  protected hasStore() {\n    return !!window.localStorage;\n  }\n\n  static get type() {\n    return 'localstorage';\n  }\n}\n\nexport default LocalStorage;\n","import Storage from './storage';\nimport { StorageOptions } from './types';\n\nconst date = new Date(0).toUTCString();\nconst equal = '%3D',\n  equalRegex = new RegExp(equal, 'g');\n\nclass Cookies extends Storage {\n  constructor(options: StorageOptions) {\n    super(options);\n    return (<typeof Cookies>this.constructor)._matchingInstance<Cookies>(this);\n  }\n\n  protected upsert(data: object) {\n    for (let key in data) {\n      this.setStore(\n        `${this.tableName}/${key}=${(<typeof Storage>this.constructor)\n          .stringify(data[key])\n          .replace(/=/g, equal)}; path=/`\n      );\n    }\n    return true;\n  }\n\n  protected delete(keys: string[]) {\n    keys.forEach((k: any) => this.setStore(`${this.tableName}/${k}=; expires=${date}; path=/`));\n    return true;\n  }\n\n  protected deleteAll() {\n    return this.keys().then(this.delete.bind(this));\n  }\n\n  protected getStore() {\n    let result = document.cookie,\n      ans = {};\n    result.split('; ').forEach(value => {\n      let [k, v] = value.split('=');\n      if (k.indexOf(this.tableName) === 0)\n        ans[k.slice(this.tableName.length + 1)] = (<typeof Storage>this.constructor).parse(\n          v.replace(equalRegex, '=')\n        );\n    });\n    return ans;\n  }\n\n  protected setStore(v: string) {\n    document.cookie = v;\n  }\n\n  protected hasStore() {\n    return typeof document.cookie !== 'undefined';\n  }\n\n  static get type() {\n    return 'cookies';\n  }\n}\n\nexport default Cookies;\n","import Storage from './storage';\nimport { StorageOptions } from './types';\n\nclass JsonStorage extends Storage {\n  constructor(options: StorageOptions) {\n    super(options);\n    return (<typeof JsonStorage>this.constructor)._matchingInstance(this);\n  }\n\n  protected hasStore() {\n    return true;\n  }\n\n  static get type() {\n    return 'jsonstorage';\n  }\n}\n\nexport default JsonStorage;\n","import IndexedDB from './storages/indexeddb';\nimport WebSQL from './storages/websql';\nimport LocalStorage from './storages/localstorage';\nimport Cookies from './storages/cookies';\nimport JsonStorage from './storages/jsonstorage';\nimport { StorageOptions } from './storages/types';\nimport Storage from './storages/storage';\n\ntype StorageConstructor = {\n  new (options: StorageOptions): Storage;\n};\n\nconst storages: { [x: string]: StorageConstructor } = {\n  [IndexedDB.type]: IndexedDB,\n  [WebSQL.type]: WebSQL,\n  [LocalStorage.type]: LocalStorage,\n  [Cookies.type]: Cookies,\n  [JsonStorage.type]: JsonStorage\n};\n\ntype MainOptions = StorageOptions & {\n  priority?: string[];\n};\n\nfunction getSupportedStoreFromPriority(\n  priority: string[] = [],\n  options: StorageOptions = {}\n): Storage {\n  priority = priority.concat([\n    IndexedDB.type,\n    WebSQL.type,\n    LocalStorage.type,\n    Cookies.type,\n    JsonStorage.type\n  ]);\n  for (let i = 0; i < priority.length; i++) {\n    let store = storages[priority[i]];\n    if (store) {\n      const storage = new store(options);\n      if (storage.isSupported()) return storage;\n    }\n  }\n  throw Error(\n    'No compatible storage found. Available types: ' + Object.keys(storages).join(', ') + '.'\n  );\n}\n\nfunction getStorage(options: string | MainOptions): Storage {\n  const priority = typeof options === 'string' ? [options] : (options || {}).priority;\n  const stOptions = typeof options === 'string' ? {} : options;\n\n  return getSupportedStoreFromPriority(priority, stOptions);\n}\n\nexport {\n  IndexedDB,\n  WebSQL,\n  LocalStorage,\n  Cookies,\n  JsonStorage,\n  getStorage,\n  storages as availableStores\n};\n"],"names":["toS","Object","prototype","toString","uId","decodeBlob","str","type","Blob","Uint8Array","split","buffer","encodeBlob","blob","uri","URL","createObjectURL","xhr","XMLHttpRequest","open","send","revokeObjectURL","ui8","response","length","i","charCodeAt","parse","data","ans","JSON","e","indexOf","av","av2","map","parseInt","window","Array","isArray","forEach","v","k","stringify","d","call","slice","parseGetData","original","onExpire","now","Date","keys","createdAt","ttl","value","parseSetValue","defaultTtl","parseSetData","key","parseKey","defaultOptions","name","version","description","size","Storage","constructor","options","assign","tableName","select","table","getStore","upsert","setStore","delete","deleteAll","Promise","resolve","then","all","del","bind","get","set","clear","memoize","func","keyFunc","arg","args","undefined","resultPromise","Error","isSupported","force","document","hasStore","isEqual","other","_add","instance","_all","push","_matchingInstance","otherInstance","IndexedDB","promises","_tx","r","scope","fn","param1","param2","me","store","createStore","db","reject","tx","transaction","objectStore","request","onsuccess","event","target","result","onerror","error","indexedDB","onupgradeneeded","createObjectStore","WebSQL","parsedData","q","join","execSql","getWebsql","executeSql","openDatabase","_store","query","results","parseResults","len","rows","item","LocalStorage","getLocalStorage","getItem","setItem","removeItem","filter","localStorage","date","toUTCString","equal","equalRegex","RegExp","Cookies","replace","cookie","JsonStorage","storages","getSupportedStoreFromPriority","priority","concat","storage","getStorage","stOptions"],"mappings":"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"}